//////////////////////////////////////////////////
///// IMPORTS
//////////////////////////////////////////////////
import { Subject, Subscription } from 'rxjs';
///////////////////////////////////////////////////////////////
let channels:{[key:string]:Subject<any>}={};
///////////////////////////////////////////////////////////////
export function subscribe(topic:string,observer:(_:any)=>void):Subscription{if(!channels[topic]){channels[topic]=new Subject<any>()};return channels[topic].subscribe(observer)}
///////////////////////////////////////////////////////////////
export function publish(topic:string,data:any):void{const subject=channels[topic];if(!subject){return};subject.next(data)}
///////////////////////////////////////////////////////////////
export function check(topic:string):Promise<boolean>{const subject=channels[topic];if(!subject){return Promise.resolve(false)}else{return Promise.resolve(true)}}
///////////////////////////////////////////////////////////////
export function destroy(topic:string):void{const subject=channels[topic];if(!subject){return};subject.complete();delete channels[topic]}
///////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////